#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        tab2 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        usjis_colon: usjis_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON>;
            label = "USJIS_COLON";
        };

        usjis_hyphn: usjis_hyphn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp UNDER>;
            label = "USJIS_HYPHN";
        };

        usjis_semicolon: usjis_semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SEMI>;
            label = "USJIS_SEMICOLON";
        };

        kakko: kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT_ARROW>;
            label = "KAKKO";
        };

        usjis_atmark: usjis_atmark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT>;
            label = "USJIS_ATMARK";
        };

        usjis_ruijo: usjis_ruijo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET>;
            label = "USJIS_RUIJO";
        };

        usjis_and: usjis_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS>;
            label = "USJIS_AND";
        };

        usjis_kome: usjis_kome {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp STAR>;
            label = "USJIS_KOME";
        };

        usjis_plus: usjis_plus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS>;
            label = "USJIS_PLUS";
        };

        usjis_equal: usjis_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>;
            label = "USJIS_EQUAL";
        };

        usjis_kagikakko: usjis_kagikakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT_ARROW>;
            label = "USJIS_KAGIKAKKO";
        };

        usjis_nyorokakko: usjis_nyorokakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT_ARROW>;
            label = "USJIS_NYOROKAKKO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        semi_colon: semi_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMI_COLON";
            bindings = <&usjis_semicolon>, <&usjis_colon>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        blacket: blacket {
            compatible = "zmk,behavior-mod-morph";
            label = "BLACKET";
            bindings = <&usjis_kagikakko>, <&usjis_nyorokakko>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        single_quote: single_quote {
            compatible = "zmk,behavior-mod-morph";
            label = "SINGLE_QUOTE";
            bindings = <&kp AMPERSAND>, <&kp AT_SIGN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hyphon_underbar: hyphon_underbar {
            compatible = "zmk,behavior-mod-morph";
            label = "HYPHON_UNDERBAR";
            bindings = <&kp MINUS>, <&usjis_hyphn>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mscrl: mscrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "MSCRL";
            #sensor-binding-cells = <2>;
            bindings = <&none>, <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA         &kp PERIOD                                            &kp F        &kp W  &kp R  &kp Y  &kp P
&kp E             &kp I         &kp A         &kp O             &hyphon_underbar  &kp LS(LG(S))      &single_quote    &kp K        &kp T  &kp N  &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &semi_colon       &blacket           &kp SLASH        &kp G        &kp D  &kp M  &kp J  &kp B
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LANGUAGE_2  &lt 2 LANGUAGE_1  &lt 1 SPACE        &lt 1 BACKSPACE  &lt 4 ENTER                       &kp DEL
            >;

            sensor-bindings = <&mscrl SCRL_UP SCRL_DOWN>;
        };

        ARROW {
            bindings = <
&kp EXCLAMATION  &usjis_atmark  &kp HASH  &kp DOLLAR  &kp PERCENT                      &usjis_ruijo  &usjis_and  &usjis_kome     &usjis_plus      &kakko
&kp ESCAPE       &trans         &trans    &trans      &trans       &trans      &trans  &trans        &trans      &kp UP_ARROW    &trans           &trans
&trans           &trans         &trans    &trans      &trans       &trans      &trans  &trans        &kp LEFT    &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans           &trans         &trans    &trans      &trans       &trans      &trans  &trans                                                     &trans
            >;

            sensor-bindings = <&mscrl SCRL_UP SCRL_DOWN>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6       &kp N7        &kp N8        &kp N9        &kp N0
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp DOUBLE_QUOTES  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp SLASH          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp COLON
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp N0                                                       &kp UNDERSCORE
            >;
        };

        FUNCTION {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                  &kp F6        &kp F7  &kp F8  &kp F9             &kp F10
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans        &trans        &trans  &trans  &kp C_VOLUME_UP    &kp F11
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans      &trans        &trans        &trans  &trans  &kp C_VOLUME_DOWN  &kp F12
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans      &out OUT_BLE  &out OUT_USB                                     &kp C_SLEEP_MODE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans     &none      &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &none      &none      &none      &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                   &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
