#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA         &kp PERIOD                                                &kp F        &kp W  &kp R  &kp Y  &kp D
&kp E             &kp I         &kp A         &kp O             &kp MINUS         &kp LS(LG(S))         &kp SINGLE_QUOTE  &kp K        &kp T  &kp N  &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V             &kp SEMICOLON     &kp LEFT_BRACKET      &kp SLASH         &kp G        &kp D  &kp M  &kp J  &kp B
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LANGUAGE_2  &lt 2 LANGUAGE_1  &lt 1 SPACE           &lt 1 BACKSPACE   &lt 3 ENTER                       &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        ARROW {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp UP_ARROW    &kp ASTERISK  &kp LEFT_PARENTHESIS
&kp ESCAPE       &trans       &trans    &trans      &trans       &trans      &trans  &trans     &kp LEFT       &kp DOWN_ARROW  &kp RIGHT     &trans
&trans           &trans       &trans    &trans      &trans       &trans      &trans  &mkp MB4   &mkp LCLK      &mkp MCLK       &mkp RCLK     &mkp MB5
&trans           &trans       &trans    &trans      &trans       &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(K_SCROLL_DOWN) LC(K_SCROLL_UP)>;
        };

        NUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                      &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp ASTERISK  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp SLASH     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&trans        &trans        &trans        &trans        &trans  &trans      &trans  &kp N0                                                  &kp EQUAL
            >;
        };

        FUNCTION {
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5                                  &kp F6        &kp F7  &kp F8  &kp F9             &kp F10
&bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans      &trans        &trans        &trans  &trans  &kp C_VOLUME_UP    &kp F11
&bt BT_CLR      &trans        &trans        &trans        &trans        &trans      &trans        &trans        &trans  &trans  &kp C_VOLUME_DOWN  &kp F12
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans      &out OUT_BLE  &out OUT_USB                                     &kp C_SLEEP_MODE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
